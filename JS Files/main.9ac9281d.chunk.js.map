{"version":3,"sources":["Form.js","App.js","VisualOne.js","VisualTwo.js","VisualThree.js","VisualFour.js","VisualFive.js","logo.svg","Problem.js","Representation.js","serviceWorker.js","index.js"],"names":["Form","props","_this","Object","_home_ec2_user_environment_leetcodr_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_ec2_user_environment_leetcodr_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_ec2_user_environment_leetcodr_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","text","onChange","bind","_home_ec2_user_environment_leetcodr_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","v","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","onSubmit","handleSubmit","type","value","Component","App","code","currentStep","steps","win","canMoveNext","problemStatement","push","screen","p1","visual","passed","failed","seen","tests","input","output","p2","p3","p4","undefined","p5","testCode","progress","rewind","getEligibility","setState","alert","f","j","length","fBuilder","eval","err","current","rep","_VisualOne__WEBPACK_IMPORTED_MODULE_15__","eligibility","_VisualTwo__WEBPACK_IMPORTED_MODULE_16__","_VisualThree__WEBPACK_IMPORTED_MODULE_17__","_VisualFour__WEBPACK_IMPORTED_MODULE_18__","_VisualFive__WEBPACK_IMPORTED_MODULE_19__","console","log","total","className","id","react_ace__WEBPACK_IMPORTED_MODULE_9___default","mode","theme","name","onLoad","fontSize","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","class","onClick","href","renderFirst","map","item","i","src","VisualOne","allowNext","submit","componentWillReceiveProps","nextProps","e","preventDefault","_this2","target","emails","split","Set","indexOf","local","substring","rest","includes","replace","add","size","VisualTwo","places","grid","city","toLowerCase","result","getNumberOfIslands","binaryMatrix","islands","rows","cols","markIsland","q","shift","x","y","pushIfValid","VisualThree","q1","q2","q3","cost","onChangeq1","onChangeq2","onChangeq3","quantities","shoppingOffers","price","special","needs","Number","MAX_VALUE","offer","valid","remain","Math","min","origin","nonOffer","VisualFour","paths","numOfPathsToDest","n","lastRow","currentRow","VisualFive","end","buses","onChange2","ending","start","dest","getBusRoute","routes","S","T","visited","Map","count","curBusStop","get","set","queue","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","bus","has","nextBusStop","return","module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ac9281d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            text: \"\"\n        }\n        \n        this.onChange = this.onChange.bind(this);\n    }\n    \n    onChange(v) {\n        this.state.text = v;\n    }\n    \n    render() {\n        return (\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\" value={this.state.text} onChange={this.onChange} />\n                    <input type=\"submit\" value=\"submit\"/>\n                </form>\n            )\n    }\n}","import React, {\n    Component\n} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AceEditor from 'react-ace';\nimport Problem from './Problem';\nimport Representation from './Representation';\nimport Form from './Form';\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport VisualOne from './VisualOne'\nimport VisualTwo from './VisualTwo'\nimport VisualThree from './VisualThree'\nimport VisualFour from './VisualFour'\nimport VisualFive from './VisualFive'\n\n// http://e645cb53.ngrok.io/\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            code: \"\",\n            currentStep: 0,\n            steps: [],\n            win: false,\n            canMoveNext: false,\n            problemStatement: \"\"\n        };\n        \n        // Home page\n        // this.state.steps.push({\n        //     screen: Home,\n        //     problemStatement:\n        // })\n\n        // https://8f280792.ngrok.io/?\n        // Push the first step onto the array\n        // format: q is current question, a is correct answer to q.\n        this.state.steps.push({\n            screen: Form,\n            problemStatement: p1,\n            visual: 0,\n            value: \"let a = (emails) => {} \",\n            passed: [],\n            failed: [],\n            seen: false,\n            tests: [\n                //Problem 1\n                {\n                    input: 'a([\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"])',\n                    output: 2\n                },\n                {\n                    input: 'a([\"alice.z@leetcode.com\",\"alicez@leetcode.com\"])',\n                    output: 1\n                },\n                {\n                    input: 'a([])',\n                    output: 0\n                },\n            ]\n        });\n          \n          this.state.steps.push({\n            screen: Form,\n            problemStatement: p2,\n            value: \"let getNumberOfIslands = (binaryMatrix) => {}\",\n            visual: 1,\n            passed: [],\n            failed: [],\n            seen: false,\n            tests: [\n                //Problem 2\n                {\n                    input: 'getNumberOfIslands([[1,1,1,1,0], [1,1,0,1,0], [1,1,0,0,0], [0,0,0,0,0]])',\n                    output: 1\n                },\n                {\n                    input: 'getNumberOfIslands([[1,1,0,0,0], [1,1,0,0,0], [0,0,1,0,0], [0,0,0,1,1]])',\n                    output: 3\n                },\n                {\n                    input: 'getNumberOfIslands([])',\n                    output: 0\n                },\n            ]\n        });\n        \n          this.state.steps.push({\n            screen: Form,\n            problemStatement: p3,\n            value: \"let shoppingOffers = (price, special, needs) => {}\",\n            visual: 2,\n            passed: [],\n            failed: [],\n            seen: false,\n            tests: [\n                //Problem 3\n                {\n                    input: 'shoppingOffers([2,5], [[3,0,5],[1,2,10]], [3,2])',\n                    output: 14\n                },\n                {\n                    input: 'shoppingOffers([2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1])',\n                    output: 11\n                },\n                {\n                    input: 'shoppingOffers([], [], [])',\n                    output: 0\n                },\n            ]\n        });\n        \n          this.state.steps.push({\n            screen: Form,\n            problemStatement: p4,\n            value: \"let numOfPathsToDest = (n) => { }\",\n            seen: false,\n            passed: [],\n            failed: [],\n            visual: 3,\n            tests: [\n                //Problem 4: LC 64\n                {\n                    input: 'numOfPathsToDest(14)',\n                    output: 742900\n                },\n                {\n                    input: 'numOfPathsToDest(5)',\n                    output: 14\n                },\n                {\n                    input: 'numOfPathsToDest(10)',\n                    output: 4862\n                },\n                {\n                    input: 'numOfPathsToDest(0)',\n                    output: undefined\n                },\n            ]\n        });\n        \n          this.state.steps.push({\n            screen: Form,\n            problemStatement: p5,\n            value: \"\",\n            seen: false,\n            passed: [],\n            failed: [],\n            visual: 4,\n            tests: [\n                //Problem 5: LC 815\n                {\n                    input: 'getBusRoute([[1, 2, 7], [3, 6, 7]], 1, 6)',\n                    output: 2\n                },\n                {\n                    input: 'getBusRoute([], 0, 0)',\n                    output: 0\n                },\n            ]\n        });        \n\n        this.onChange = this.onChange.bind(this);\n        this.testCode = this.testCode.bind(this);\n        this.progress = this.progress.bind(this);\n        this.rewind = this.rewind.bind(this);\n        this.getEligibility = this.getEligibility.bind(this);\n    }\n    \n    getEligibility() {\n      return this.state.canMoveNext;\n    }\n\n    onChange(v) {\n        this.state.code = v;\n        this.state.steps[this.state.currentStep].value = v;\n    }\n    \n    rewind() {\n      // The user is trying to go back\n      if (this.state.currentStep === 0) {\n        alert(\"cant go back, already at first step\");\n        return;\n      }\n      \n      this.setState({\n        canMoveNext: true,\n        code: this.state.steps[this.state.currentStep-1].value,\n        currentStep: this.state.currentStep-1\n      })\n    }\n    \n    progress() {\n      // Meaning the user is trying to move forward.\n      if (this.state.canMoveNext || this.state.steps[this.state.currentStep].seen) {\n        this.state.steps[this.state.currentStep].value = this.state.code\n        this.setState({\n          canMoveNext: false,\n          code: this.state.steps[this.state.currentStep+1].value,\n          currentStep: this.state.currentStep+1\n        })\n      }\n    }\n\n    testCode() {\n        this.state.steps[this.state.currentStep].passed = []\n        this.state.steps[this.state.currentStep].failed = []\n        //alert('test code called: ' + JSON.stringify(this.state))\n        // If test passes, increment currentStep.\n        // Otherwise, game over (flip this.state.win)\n        let f = null;\n        var passed = 0;\n\n        /* \n        let a = (b) => {\n          return b\n        }\n        */\n\n        //this.state.steps[this.state.currentStep].tests.length\n        for (var j = 0; j < this.state.steps[this.state.currentStep].tests.length; j++) {\n            let fBuilder = this.state.code + \" \\n\" + this.state.steps[this.state.currentStep].tests[j].input;\n            try {\n                f = eval(fBuilder);\n            } catch (err) {\n                alert('Error: ' + err);\n                return;\n            }\n            let current = this.state.steps\n            if (f === this.state.steps[this.state.currentStep].tests[j].output) {\n                // Wohoo, good stuff.\n                current[this.state.currentStep].passed.push({input: this.state.steps[this.state.currentStep].tests[j].input, output: this.state.steps[this.state.currentStep].tests[j].output})\n                passed++;\n                //alert(\"Success on test \" + j);\n            } else {\n                current[this.state.currentStep].failed.push({input: this.state.steps[this.state.currentStep].tests[j].input, output: this.state.steps[this.state.currentStep].tests[j].output})\n                // Otherwise, test case failed.\n                //alert(\"failed test case \" + j + \" bad: \" + this.state.steps[this.state.currentStep].failed);\n            }\n            this.setState({\n                steps: current\n            })\n\n        }\n\n        //alert(\"passed \" + passed + \"/\" + this.state.steps[this.state.currentStep].tests.length + \"testcases\");\n        if (passed === this.state.steps[this.state.currentStep].tests.length) {\n          this.state.steps[this.state.currentStep].value = this.state.code;\n          this.state.steps[this.state.currentStep].seen = true;\n          this.setState({\n            canMoveNext: true\n          })\n          // this.setState({\n          //     currentStep: this.state.currentStep + 1\n          // });\n        }\n    }\n    \n    renderFirst(rep) {\n      if (rep === 0) {\n        return <VisualOne eligibility={this.state}/>\n      } else if (rep == 1) {\n        return <VisualTwo eligibility={this.state}/>\n      } else if (rep == 2) {\n        return <VisualThree eligibility={this.state}/>\n      } else if(rep == 3) {\n        return <VisualFour eligibility={this.state}/>\n      } else { // 4\n        return <VisualFive eligibility={this.state}/>\n      }\n    }\n\n    render() {\n        console.log(this.state)\n        let total = this.state.steps[this.state.currentStep].tests.length\n        if (this.state.win) {\n            return <h2 > Congrats, you 're a winner</h2>;\n        } else return ( \n            <div className = \"App\" >\n                <div id = \"workspace\">\n                    <div id = \"ide1\">\n                        <AceEditor mode = \"javascript\"\n                        theme = \"monokai\"\n                        name = \"ide\"\n                        value={this.state.steps[this.state.currentStep].value}\n                        onLoad = {\n                            this.onLoad\n                        }\n                        onChange = {\n                            this.onChange\n                        }\n                        fontSize = {\n                            14\n                        }\n                        showPrintMargin = {\n                            true\n                        }\n                        showGutter = {\n                            true\n                        }\n                        highlightActiveLine = {\n                            true\n                        }\n                        setOptions = {\n                            {\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: false,\n                                showLineNumbers: true,\n                                tabSize: 2,\n                            }\n                        }\n                        /> \n                        \n                        <button class = \"runcode\" onClick={this.testCode}><a  href=\"#container\">Run Code</a></button>\n                        <button class=\"prev\" onClick={this.rewind}>Previous</button>\n                        <button class= \"next\" onClick={this.progress}>Next</button>\n                    </div>\n                    <p id =\"pstatement\"> <div id=\"pstatement_content\">{this.state.steps[this.state.currentStep].problemStatement()}</div></p>\n                </div>\n                <div id =\"output\">\n                    <div id=\"demo\">\n                        <p id =\"demoname\"> DEMO </p>\n                        {this.renderFirst(this.state.steps[this.state.currentStep].visual)}\n                    </div>\n                    <div id=\"op\">\n                        <div id =\"output_container\">\n                        <div id=\"pass_msg\">\n                        <h3>{\"Passed \" + this.state.steps[this.state.currentStep].passed.length + \"/\" + total + \" testcases\"}</h3>\n                        </div>                      \n                        <h4>Successful test cases </h4>\n                        {\n                            this.state.steps[this.state.currentStep].passed.map((item, i) => {\n                                return (\n                                <div class=\"testcase\">\n                                    <p>input: {item.input}</p>\n                                    <p>output: {item.output}</p>\n                                </div>)\n                            })\n                        }\n                        <br/>\n                        <h4>Failed test cases </h4>\n                        {\n                            this.state.steps[this.state.currentStep].failed.map((item, i) => {\n                                return (<div  class=\"testcase\">\n                                    <p>input: {item.input}</p>\n                                    <p>output: {item.output}</p>\n                                </div>)\n                            })\n                        }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nlet p1 = () => {\n  return (\n  \n  <div>\n    <p class=\"title\"> 1. Email Validation </p>\n    <p class = \"statement\">\n      Create a boba finder account! Check and filter valid email addresses.\n      <br/> Every email consists of a local name and a domain name, separated by the @ sign. \n      <br/> For example, in alice@leetcode.com, alice is the local name, and leetcode.com is the domain name.\n    Besides lowercase letters, these emails may contain '.'s or '+'s. \n    <br/>If you add periods ('.') between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name.  For example, \"alice.z@leetcode.com\" and \"alicez@leetcode.com\" forward to the same email address.  (Note that this rule does not apply for domain names.) \n    <br/>\n    If you add a plus ('+') in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered, for example m.y+name@email.com will be forwarded to my@email.com.  (Again, this rule does not apply for domain names.)\n    <br/>It is possible to use both of these rules at the same time.\n    Given a list of emails, we send one email to each address in the list.  How many different addresses actually receive mails? \n    </p>\n    <p class = \"example\">\n        Example 1:\n        <p class=\"example_list\">\n            Input: [\"test.email+alex@leetcode.com\",\"test.e.mail+bob.cathy@leetcode.com\",\"testemail+david@lee.tcode.com\"] \n            <br/> \n            <br/> \n            Output: 2 \n        <p class=\"explanation\"> \n            Explanation: \"testemail@leetcode.com\" and \"testemail@lee.tcode.com\" actually receive mails.\"\n        </p>\n    </p>\n  </p>\n </div>)\n}\n\nlet p2 = () => {\n  return (\n  <div>\n    <p class=\"title\"> 2. Number of Boba Shops </p>\n    <p class = \"statement\">\n        Congrats on successfully signing up! We must now locate all the boba shops in a given city. Since GPS is not too accurate, we have a grid map of points where a boba shop is in vicinity.\n        Find the number of boba shops in a given grid map of a city! \n        <br/>\n        Given a 2D grid map of '1's (boba shop) and '0's (not boba), count the number of boba shops. \n        A boba shop is surrounded by non-boba shop areas and is formed by connecting adjacent possible boba shop points horizontally or vertically. You may assume all four edges of the grid are all surrounded by areas that are NOT boba shops.\n    </p>\n    <p class = \"example\">\n        Example 1:\n \n    <p class=\"example_list\">\n        Input:\n        <br/>\n        11110\n         <br/>\n        11010\n         <br/>\n        11000\n         <br/>\n        00000\n         <br/>\n         <br/>\n        Output: 1\n         <br/>\n    </p>\n    </p>\n    <p class = \"example\">\n        Example 2:\n    <p class=\"example_list\">\n    \n        Input:\n         <br/>\n        11000\n         <br/>\n        11000\n         <br/>\n        00100\n         <br/>\n        00011\n         <br/>\n        <br/>\n        Output: 3\n    </p>\n    </p>\n    </div>)\n}\n\nlet p3 = () => {\n  return (\n  <div>\n  \n    <p class=\"title\"> 3. Applying Special Offers </p>\n    <p class = \"statement\">\n    After finding all boba shops in your city, we need to find the cheapest way to get all the boba types you'd like, given that there are special offers for certain boba types from certain shops.\n      <br/>\n      In a Boba Store, there are some kinds of items to sell. Each item has a price.\n     <br/>\n    However, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\n     <br/>\n    You are given the each item's price, a set of special offers, and the number we need to buy for each item. The job is to output the lowest price you have to pay for exactly certain items as given, where you could make optimal use of the special offers.\n     <br/>\n    Each special offer is represented in the form of an array, the last number represents the price you need to pay for this special offer, other numbers represents how many specific items you could get if you buy this offer.\n     <br/>\n    You could use any of special offers as many times as you want.\n    </p>\n    <p class = \"example\">\n        Example 1:\n        <br/>\n        <p class=\"example_list\">\n         <br/>\n        Input: [2,5], [[3,0,5],[1,2,10]], [3,2]\n         <br/>\n         <br/>\n        Output: 14\n         <br/>\n             <p class=\"explanation\">\n            Explanation: \n             <br/>\n            There are two kinds of items, A and B. Their prices are $2 and $5 respectively. \n            In special offer 1, you can pay $5 for 3A and 0B\n            In special offer 2, you can pay $10 for 1A and 2B. \n            You need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\n            </p>\n        </p>\n    </p>\n    <p class=\"example\">\n        Example 2:\n        <p class=\"example_list\">\n         <br/>\n        Input: [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\n         <br/>\n         <br/>\n        Output: 11\n         <br/>\n        </p>\n    \n        <p class=\"explanation\">\n            Explanation: \n             <br/>\n            The price of A is $2, and $3 for B, $4 for C. \n            You may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \n            You need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \n            You cannot add more items, though only $9 for 2A ,2B and 1C.\n         <br/>\n         <br/>\n        Note:\n         <br/>\n        There are at most 6 kinds of items, 100 special offers.\n        For each item, you need to buy at most 6 of them.\n        You are not allowed to buy more items than you want, even if that would lower the overall price.        \n        </p>\n    </p>\n  </div>)\n}\n\n\nlet p4 = () => {\n  return (<div>\n    <p class=\"title\"> 4. Finding Number of Routes </p>\n    <p class = \"statement\">\n      We've found one ideal boba shop for all your boba needs now! To maximize options for travel to this boba shop, we want to find the total number of possible paths from your starting location to the boba shop.\n      Streets in between are represented as edges in a 2D square matrix with length of a side of this square given. You start at the bottom left corner and want to reach the upper right corner, moving only up and to the left.\n    </p>\n    \n    <p class = \"example\">\n      Example:\n       <br/>\n       <p class=\"example_list\">     \n           Input: 5\n           <br/>\n          Visualize: \n           <br/>\n            <img src= \"assets/grid.jpg\" id = \"5x5 matrix\" />\n           <br/>\n           <br/>\n            Output: 14 \n            <br/>\n            </p>\n      </p>\n    <p class=\"explanation\"> \n       <br/>\n       <br/>\n      Hint: try dynamic programming by storing number of paths to a certain place!\n\"    </p>  \n  </div>)\n}\n\nlet p5 = () => {\n  return (<div>\n  <p class=\"title\"> 5. Finding Bus Routes </p>\n  <p class = \"statement\">\n        Now that we've found all the possible paths, we want to see which of the available bus routes in this city can take us from our starting point to our desired boba shop!\n         <br/>\n        We have a list of bus routes. Each routes[i] is a bus route that the i-th bus repeats forever. For example if routes[0] = [1, 5, 7], this means that the first bus (0-th indexed) travels in the sequence 1->5->7->1->5->7->1->... forever.\n       <br/>\n        We start at bus stop S (initially not on a bus), and we want to go to bus stop T. Travelling by buses only, what is the least number of buses we must take to reach our destination? Return -1 if it is not possible.\n\n    </p>\n    <p class = \"example\">\n        Example:\n           <br/>\n           <p class=\"example_list\">\n            Input: \n               <br/>\n            routes = [[1, 2, 7], [3, 6, 7]]\n               <br/>\n            S = 1\n               <br/>\n            T = 6\n               <br/>\n              <br/>\n            Output: 2\n               <br/>\n           </p>\n      </p>\n    <p class=\"explanation\"> \n        Explanation:\n       <br/>\n        The best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.\n\"     </p>\n  </div>)\n}\n\n\n\nexport default App;","import React, { Component } from 'react'\n\nexport default class VisualOne extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            value: \"\",\n            allowNext: false\n        }\n        \n        this.submit = this.submit.bind(this)\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log('next props \\n')\n        console.log(nextProps)\n        this.setState({\n            allowNext: nextProps.eligibility.canMoveNext\n        })\n    }\n    \n    submit(e) {\n        e.preventDefault()\n        console.log(this.state.allowNext)\n        if (this.state.allowNext) {\n            alert(a(this.state.value))\n        } else {\n            alert(\"Please complete the code for checking email validation first!\")\n        }\n    }\n    \n    render() {\n        return (\n            <div class=\"mobileapp\" >\n            <div class=\"mobile_nav\">\n                <img class =\"mobile_logo\" src= \"/assets/tea.png\"/>\n                <ul>\n                    <li> The Boba App</li>\n                </ul>\n            <div class = \"mobile_right\">\n                <img class =\"mobile_logo\" src= \"/assets/menu.png\"/>\n             </div>\n            </div>\n            <div id=\"container\">\n                <h4>Validate Emails Here:</h4>\n                <form>\n                    <label> \n                        E-mail:\n                        <input class=\"select2\" onChange={(e) => {this.setState({value: e.target.value})}} value={this.state.value} type=\"text\"/>\n                    </label>\n                    <input class=\"submit\" type=\"submit\" value=\"Submit\" onClick={this.submit}/>\n                </form>\n            </div>\n            </div>\n        )\n    }\n}\n\nlet a = (emails) => {\n  emails = emails.split(\" \")\n  if (emails.length < 1) return 0;\n  let seen = new Set()\n  for (let i = 0; i < emails.length; i++) {\n    let j = emails[i].indexOf('@')\n    let local = emails[i].substring(0, j)\n    let rest = emails[i].substring(j)\n    if (local.includes(\"+\")) {\n      local = local.substring(0, local.indexOf('+'))\n    }\n    local = local.replace(/./g, '')\n    seen.add(local + rest)\n  }\n  \n  return seen.size\n}","import React, { Component } from 'react'\n\nexport default class VisualTwo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            places: \"\",\n            allowNext: false,\n            grid: []\n        }\n        this.onChange = this.onChange.bind(this)\n        this.submit = this.submit.bind(this)\n    }\n    \n    // When a new option is chosen\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        })\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            allowNext: nextProps.eligibility.canMoveNext\n        })\n    }\n    \n    \n    \n    // When the user chooses their city\n    submit(e) {\n        e.preventDefault()\n        if (!this.state.allowNext) {\n            alert(\"you're in the wrong house, fool. complete your test cases first.\")\n            return\n        }\n        let city = this.state.value.toLowerCase()\n        let result = 0;\n        if (city === 'seattle') {\n            this.state.grid = [[1,1,1,1,0], [1,1,0,1,0], [1,1,0,0,0], [0,0,0,0,0]]\n            result = getNumberOfIslands([[1,1,1,1,0], [1,1,0,1,0], [1,1,0,0,0], [0,0,0,0,0]])\n        } else if (city === 'los angeles') {\n            this.state.grid = [[1,1,0,0,0], [1,1,0,0,0], [0,0,1,0,0], [0,0,0,1,1]]\n            result = getNumberOfIslands([[1,1,0,0,0], [1,1,0,0,0], [0,0,1,0,0], [0,0,0,1,1]])\n        } else if (city === 'new york'){\n            this.state.grid = []\n            result = getNumberOfIslands([])\n        }\n        this.setState({\n            places: result + \" Boba places found\"\n        })\n    }\n    \n    render() {\n        return (\n            <div class=\"mobileapp\" >\n                <div class=\"mobile_nav\">\n                    <img class =\"mobile_logo\" src= \"/assets/tea.png\"/>\n                    <ul>\n                        <li> The Boba App</li>\n                    </ul>\n                <div class = \"mobile_right\">\n                    <img class =\"mobile_logo\" src= \"/assets/menu.png\"/>\n                 </div>\n                </div>\n\n                <div>\n                    <div id=\"container\">\n                        <h4>Find the number of Boba shops in a city</h4>\n                        <p>Currently, we only support Seattle, Los Angeles and New York</p>\n                        <div class=\"mobile_input\">\n                        <p>Maps input</p>\n                        {       \n                            this.state.grid.map((item, i) => {\n                                return (<div>\n                                    <p>{this.state.grid[i]}</p>\n                                </div>)\n                            })\n                        }\n                        </div>\n                        <form>\n                            <label class=\"label2\">\n                                City\n                                <select class = \"select2\"value={this.state.value} onChange={this.onChange}>\n                                    <option value=\"Seattle\">Seattle</option>\n                                    <option value=\"Los Angeles\">Los Angeles</option>\n                                    <option value=\"New York\">New York</option>\n                                </select>\n                            </label>\n                            <input class =\"submit\" type=\"submit\" value=\"Submit\" onClick={this.submit}/>\n                        </form>\n                        <div class=\"mobile_output\">\n                         <p>{this.state.places}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            )\n    }\n}\n\nlet getNumberOfIslands = (binaryMatrix) => {\n    if (binaryMatrix.length < 1) return 0;\n    let islands = 0\n    let rows = binaryMatrix.length //# number of rows\n    let cols = binaryMatrix[0].length //# number of columns\n\n    for (let i = 0; i < rows; i++){\n        for (let j = 0; j < cols; j++){\n            if (binaryMatrix[i][j] == 1){\n                markIsland(binaryMatrix, rows, cols, i, j)\n                islands++\n            }\n        } \n    }\n    return islands\n}\n\n\nlet markIsland = (binaryMatrix, rows, cols, i, j) => {\n    let q = []\n    q.push([i,j])\n    while (q.length > 0){\n        let item = q.shift()\n        let x = item[0]\n        let y = item[1]\n        if (binaryMatrix[x][y] == 1){\n            binaryMatrix[x][y] = -1\n            pushIfValid(q, rows, cols, x-1, y)\n            pushIfValid(q, rows, cols, x, y-1)\n            pushIfValid(q, rows, cols, x+1, y)\n            pushIfValid(q, rows, cols, x, y+1)\n        }\n    }\n}\n\nfunction pushIfValid(q, rows, cols, x, y){\n    if (x >= 0 && x < rows && y >= 0 && y < cols){\n        q.push([x,y])\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class VisualThree extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            q1: 0,\n            q2: 0,\n            q3: 0,\n            cost: \"awaiting cost...\",\n            allowNext: false\n        }\n        this.onChangeq1 = this.onChangeq1.bind(this)\n        this.onChangeq2 = this.onChangeq2.bind(this)\n        this.onChangeq3 = this.onChangeq3.bind(this)\n        this.submit = this.submit.bind(this)\n    }\n    \n    // When a new option for q1 is chosen\n    onChangeq1(e) {\n        this.setState({\n            q1: e.target.value\n        })\n    }\n    \n    // when a new option for q2 is chosen\n    onChangeq2(e) {\n        this.setState({\n            q2: e.target.value\n        })\n    }\n    \n    // when a new option for q3 is chosen\n    onChangeq3(e) {\n        this.setState({\n            q3: e.target.value\n        })\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            allowNext: nextProps.eligibility.canMoveNext\n        })\n    }\n    \n    \n    \n    // When the user their quantities\n    submit(e) {\n        e.preventDefault()\n        if (!this.state.allowNext) {\n            alert(\"you're in the wrong house, fool. complete your test cases first.\")\n            return\n        }\n        let quantities = []\n        quantities.push(this.state.q1)\n        quantities.push(this.state.q2)\n        quantities.push(this.state.q3)\n        this.setState({\n            cost: shoppingOffers([5,6,7], [[1,1,0,4],[2,2,1,9]], quantities)\n        })\n    }\n    \n    render() {\n        return (\n            <div class=\"mobileapp\" >\n            <div class=\"mobile_nav\">\n                <img class =\"mobile_logo\" src= \"/assets/tea.png\"/>\n                <ul>\n                    <li> The Boba App</li>\n                </ul>\n            <div class = \"mobile_right\">\n                <img class =\"mobile_logo\" src= \"/assets/menu.png\"/>\n             </div>\n            </div>\n            <div id=\"container\">\n              <h4>Bobas that have offers</h4>\n                <p>Currently, we only support 3 types</p>\n                \n                <form>\n                    <label>\n                        Mango ($5): \n                        <input class=\"select2\" type=\"text\" value={this.state.q1} onChange={(e) => {this.setState({q1: e.target.value})}}/>\n                    </label>\n                    <br/>\n                    <label>\n                        Peach ($6):\n                        <input class=\"select2\" type=\"text\" value={this.state.q2} onChange={(e) => {this.setState({q2: e.target.value})}}/>\n                    </label>\n                    <br/>\n                    <label>\n                        Apple ($7):\n                        <input class=\"select2\" type=\"text\" value={this.state.q3} onChange={(e) => {this.setState({q3: e.target.value})}}/>\n                    </label>\n                    <br/>\n                    <input class=\"submit\" type=\"submit\" onClick={this.submit}/>\n                </form>\n                <div class=\"mobile_output\">\n                    <p>{this.state.cost}</p>\n                </div>\n              </div>\n            </div>\n            )\n    }\n}\n\nlet shoppingOffers = function(price, special, needs) {\n    var result = Number.MAX_VALUE;\n    for (var i = 0; i < special.length; i++) {\n        var offer = special[i];\n        var valid = true;\n        for (var j = 0; j < needs.length; j++) {\n            var remain = needs[j] - offer[j];\n            /* set */\n            (needs[j] = remain);\n            if (valid && remain < 0)\n                valid = false;\n        };\n        if (valid)\n            result = Math.min(result, shoppingOffers(price, special, needs) + offer[needs.length]);\n        for (var j = 0; j < needs.length; j++) {\n            var origin = needs[j] + offer[j];\n            /* set */\n            (needs[j] = origin);\n        }\n    }\n    var nonOffer = 0;\n    for (var i = 0; i < needs.length; i++) {\n        nonOffer += price[i] * needs[i];\n    }\n    return Math.min(result, nonOffer);\n}\n\n","import React, { Component } from 'react'\n\nexport default class VisualFour extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            paths: \"Please choose a location radius\",\n            allowNext: false\n        }\n        this.onChange = this.onChange.bind(this)\n        this.submit = this.submit.bind(this)\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this)\n    }\n    \n    // When a new option is chosen\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        })\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            allowNext: nextProps.eligibility.canMoveNext\n        })\n    }\n    \n    \n    \n    // When the user chooses their radius\n    submit(e) {\n        e.preventDefault()\n        if (!this.state.allowNext) {\n            alert(\"you're in the wrong house, fool. complete your test cases first.\")\n            return\n        }\n        this.setState({\n            paths: numOfPathsToDest(this.state.value) + \" total paths\"\n        })\n    }    \n    \n    render() {\n        return (\n            <div class=\"mobileapp\" >\n            <div class=\"mobile_nav\">\n                <img class =\"mobile_logo\" src= \"/assets/tea.png\"/>\n                <ul>\n                    <li> The Boba App</li>\n                </ul>\n            <div class = \"mobile_right\">\n                <img class =\"mobile_logo\" src= \"/assets/menu.png\"/>\n             </div>\n            </div>\n            \n            <div class=\"container\">\n                <h4>Number of Paths to nearest Boba shop</h4>\n                <form>\n                    <label> Enter search radius (in whole numbers): \n                        <input class=\"select2\" value={this.state.value} type=\"text\" onChange={(e) => {this.setState({value: e.target.value})}}/>\n                    </label>\n                    <input class =\"submit\" type=\"submit\" value=\"Submit\" onClick={this.submit}/>\n                </form>\n                 <div class=\"mobile_output\">\n                <p>{this.state.paths}</p>\n                </div>\n            </div>\n            </div>\n            )\n    }\n}\n\nlet numOfPathsToDest = (n) => {\n    if (n == 1){\n        return 1\n    }\n    let lastRow = []\n    for (let i = 1; i < n; i++) {\n        lastRow[i] = 1 // base case - the first row is all ones\n    }\n\n    let currentRow = []\n\n    for (let j = 1; j < n; j++){\n        for (let i = j; i < n; i++){\n            if (i == j)\n                currentRow[i] = lastRow[i]\n            else\n                currentRow[i] = currentRow[i-1] + lastRow[i]\n        }\n        lastRow = currentRow\n    }\n\n    return currentRow[n-1]\n}","import React, { Component } from 'react'\n\nexport default class VisualFive extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            end: \"\",\n            allowNext: false,     \n            buses: 0\n        }\n        \n        this.onChange = this.onChange.bind(this)\n        this.onChange2 = this.onChange2.bind(this)\n        this.submit = this.submit.bind(this)\n        this.componentWillReceiveProps = this.componentWillReceiveProps.bind(this)\n    }\n    \n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            allowNext: nextProps.eligibility.canMoveNext\n        })\n    }\n    \n    // When a new option is chosen\n    onChange(e) {\n        this.setState({\n            value: e.target.value\n        })\n    }\n    \n    onChange2(e) {\n        this.setState({\n            end: e.target.value\n        })\n    }\n    \n    submit(e) {\n        e.preventDefault()\n        if (!this.state.allowNext) {\n            alert(\"you're in the wrong house, fool. complete your test cases first.\")\n            return\n        }\n        let city = this.state.value.toLowerCase()\n        let ending = this.state.end.toLowerCase()\n        console.log(ending)\n        let start = 1;\n        let dest = 1;\n        if (city === 'u-district') {\n            start = 1\n        } else if (city === 'fremont') {\n            start = 2\n        } else if (city === 'ballard'){\n            start = 3\n        } else if (city === 'westlake'){\n            start = 7\n        }\n        \n        if (ending === 'u-district') {\n            dest = 1\n        } else if (ending === 'fremont') {\n            dest = 2\n        } else if (ending === 'ballard'){\n            dest = 3\n        } else if (ending === 'westlake'){\n            dest = 7\n        }\n        \n        console.log(start)\n        console.log(dest)\n        let buses = [[1, 2, 7], [3, 6, 7]]\n        console.log(buses);\n        let result = getBusRoute(buses, start, dest)\n        console.log(result)\n        this.setState({\n            buses: result\n        })\n    }\n    \n    render() {\n        return (\n            <div class=\"mobileapp\" >\n            <div class=\"mobile_nav\">\n                <img class =\"mobile_logo\" src= \"/assets/tea.png\"/>\n                <ul>\n                    <li> The Boba App</li>\n                </ul>\n            <div class = \"mobile_right\">\n                <img class =\"mobile_logo\" src= \"/assets/menu.png\"/>\n             </div>\n            </div>\n            \n            <div id=\"container\">\n            <h4> Number of Buses to Take </h4>\n            \n            <h4>Starting Location </h4>\n            {/*Dropdown; map each location to bus number */}\n            <div class = \"form5\">\n            <form>\n                <div class=\"startlocation\">\n                <label>\n                    Starting Bus Stop\n                    <select value={this.state.value} onChange={this.onChange}>\n                        <option value=\"U-district\">U-district</option>\n                        <option value=\"Fremont\">Fremont</option>\n                        <option value=\"Ballard\">Ballard</option>\n                        <option value=\"Westlake\">Westlake</option>\n                    </select>\n                </label>\n                </div>\n                <h4>Ending Location </h4>\n                <div class=\"endlocation\">\n                <label>\n                    Ending Bus Stop\n                    <select value={this.state.end} onChange={this.onChange2}>\n                        <option value=\"U-district\">U-district</option>\n                        <option value=\"Fremont\">Fremont</option>\n                        <option value=\"Ballard\">Ballard</option>\n                        <option value=\"Westlake\">Westlake</option>\n                    </select>\n                </label>\n                </div>\n                <input class=\"submit\" type=\"submit\" value=\"submit\" onClick={this.submit}/>\n            </form>\n            </div>\n            \n\n            \n            <div class=\"mobile_output\">\n                <p>Number of Buses: {this.state.buses} </p>\n            </div>\n            </div>\n            \n            </div>\n        )\n    }\n}\n\nvar getBusRoute = function(routes, S, T) {\n    let visited = new Set();\n    let map = new Map();\n    let count = 0;\n    \n    if (S === T) return count;\n    \n    for (let i = 0; i < routes.length; i++) {\n        for (let j = 0; j < routes[i].length; j++) {\n            const curBusStop = routes[i][j];\n            let buses = map.get(curBusStop) || [];\n            buses.push(i);\n            map.set(curBusStop, buses);\n        }\n    }\n    \n    let queue = [S];\n    while (queue.length) {\n        const size = queue.length;\n        count++;\n        for (let i = 0; i < size; i++) {\n            const curBusStop = queue.shift();\n            const buses = map.get(curBusStop);\n            for (let bus of buses) {\n                if (visited.has(bus)) continue;\n                visited.add(bus);\n                for (let j = 0; j < routes[bus].length; j++) {\n                    const nextBusStop = routes[bus][j];\n                    if (nextBusStop === T) return count;\n                    queue.push(nextBusStop);\n                }\n            }\n        }\n    }\n    \n    return -1;\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\nimport Form from './Form'\n\nexport default class Problem extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            steps: [],\n            currentStep: 0,\n            problemStatement: \"\"\n        }\n        this.state.steps.push(<Form/>)\n        this.state.steps.push(\"Problem 1\");\n        this.state.steps.push(\"Problem 2\");  \n        this.state.steps.push(\"Problem 3\");\n        this.state.steps.push(\"Problem 4\");\n        this.state.steps.push(\"Problem 5\");\n    }\n\n    \n    \n    render(props) {\n        this.currentStep++;\n        return <h1>Problem Statement: + steps[currentStep]</h1>\n    }\n}","import React, { Component } from 'react';\n\nexport default class Representation extends Component {\n    render() {\n        return (<h2>Rep</h2>)\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}